import streamlit as st
import pandas as pd
import datetime
import os

# --- ุงูุฏูุงู ุงููุณุงุนุฏุฉ ูุชุญููู ุงูุจูุงูุงุช (ูููู ุฃู ูุฑุจุทูุง ุจูููุงุช CSV ุฃุฎุฑู ูุณุชูุจูุงู) ---

# ุฏุงูุฉ ูุชุญููู ุจูุงูุงุช ูุธุงูุฉ ุฏูุฑุงุช ุงูููุงู (ุงูุชุฑุงุถูุฉ ุญุงููุงู)
def load_toilet_cleaning_data():
    # ูู ุงูุจุฑูุชูุชุงูุจุ ูุณุชุฎุฏู ุจูุงูุงุช ููููุฉ. ูุงุญูุงู ูููู ูุฑุงุกุชูุง ูู ููู CSV.
    data = {
        "ุฑูู_ุงูููุงู": ["3", "2", "1", "4"],
        "ุงูููุน": ["ูุณุงุก", "ุฑุฌุงู", "ุฑุฌุงู", "ูุณุงุก"],
        "ูุฑุงุช_ุงูุชูุธูู_ุงูููู": [1, 4, 2, 3],
        "ููุงูุต_ููุงุฏ": ["ูุง ููุฌุฏ", "ูุง ููุฌุฏ", "ุฏูุชููุ ุตุงุจููุ ููุงุฏูู", "ููุงุฏูู"]
    }
    df = pd.DataFrame(data)
    # ูููููุง ููุชุฑุฉ ููููู ุงูุญุงูู ุฅุฐุง ุฃุฑุฏูุง
    # df['ุงูุชุงุฑูุฎ'] = pd.to_datetime(df['ุงูุชุงุฑูุฎ'])
    # df = df[df['ุงูุชุงุฑูุฎ'].dt.date == datetime.date.today()]
    return df

# ุฏุงูุฉ ูุชุญููู ุงูููุงู ุงูุฅุฏุงุฑูุฉ ุงููุนููุฉ (ุงูุชุฑุงุถูุฉ ุญุงููุงู)
def load_admin_tasks():
    # ุจูุงูุงุช ููููุฉ ููููุงู ุงูุฅุฏุงุฑูุฉ
    tasks = [
        {"ุงููููุฉ": "ูุฑุงุฌุนุฉ ูุดููุงุช ุงูุฏูุงู ูููููุฐูู ูุงูุนูุงูุฉ ูุงููุงุดูุฑุงุช.", "ุงูุญุงูุฉ": "ูุนููุฉ", "ุงูููุนุฏ_ุงูููุงุฆู": "2025-07-03"},
        {"ุงููููุฉ": "ูุชุงุจุนุฉ ุญู ูุดููุฉ ุงููุงุดูุฑ ุงูุตุบูุฑ ูุงุณุชุจุฏุงู ุงูุทุงุจุนุงุช.", "ุงูุญุงูุฉ": "ูุนููุฉ", "ุงูููุนุฏ_ุงูููุงุฆู": "2025-07-02"},
        {"ุงููููุฉ": "ุงูุชุฃูุฏ ูู ุฅุบูุงู ุฃุจูุงุจ ุงููุงุดูุฑุงุช ููููุงู ูุชุตููุฑูุง.", "ุงูุญุงูุฉ": "ูุณุชูุฑุฉ", "ุงูููุนุฏ_ุงูููุงุฆู": "ูููู"},
        {"ุงููููุฉ": "ูุฑุงุฌุนุฉ ุชูุฑูุฑ ูุธุงูุฉ ุงูุจุฑุฌ ูุงูุฅุดุฑุงู ุนููู.", "ุงูุญุงูุฉ": "ูุนููุฉ", "ุงูููุนุฏ_ุงูููุงุฆู": "2025-07-01"}
    ]
    return pd.DataFrame(tasks)

# --- ุงูููุฏ ุงูุฑุฆูุณู ูุตูุญุฉ ุงูุฅุฏุงุฑุฉ ---

def run():
    st.title("๐ข ููุญุฉ ุชุญูู ุงูุฅุฏุงุฑุฉ")
    st.info("ููุง ูุชู ุนุฑุถ ููุฎุต ููุฅูุฌุงุฒุงุช ูุงูููุงู ุงูุฅุฏุงุฑูุฉ ุงููุนููุฉ.")

    # --- ูุณู ููุญุฉ ุงูุฅูุฌุงุฒุงุช/ุงูููุฎุต (ุงููุฑูุช - Cards) ---
    st.header("ููุฎุต ุงูุฃุฏุงุก ูุงูุฅูุฌุงุฒุงุช ุงูููููุฉ")

    # ุฌูุจ ุงูุจูุงูุงุช ุงูููููุฉ
    toilet_data = load_toilet_cleaning_data()

    # ุฅูุดุงุก ูุฑูุช ุจูุงุกู ุนูู ุงูุจูุงูุงุช
    col1, col2, col3 = st.columns(3)

    with col1:
        st.subheader("ุฏูุฑุงุช ุงูููุงู - ูุณุงุก")
        toilet_women = toilet_data[toilet_data["ุงูููุน"] == "ูุณุงุก"]
        total_cleaning_women = toilet_women["ูุฑุงุช_ุงูุชูุธูู_ุงูููู"].sum()
        st.metric(label="ุฅุฌูุงูู ูุฑุงุช ุงูุชูุธูู (ูุณุงุก)", value=f"{total_cleaning_women} ูุฑุฉ")
        if not toilet_women[toilet_women["ููุงูุต_ููุงุฏ"] != "ูุง ููุฌุฏ"].empty:
            st.warning("ููุฌุฏ ููุงูุต ูู ููุงุฏ ูุธุงูุฉ ุฏูุฑุงุช ุงูููุงู (ูุณุงุก).")

    with col2:
        st.subheader("ุฏูุฑุงุช ุงูููุงู - ุฑุฌุงู")
        toilet_men = toilet_data[toilet_data["ุงูููุน"] == "ุฑุฌุงู"]
        total_cleaning_men = toilet_men["ูุฑุงุช_ุงูุชูุธูู_ุงูููู"].sum()
        st.metric(label="ุฅุฌูุงูู ูุฑุงุช ุงูุชูุธูู (ุฑุฌุงู)", value=f"{total_cleaning_men} ูุฑุฉ")
        if not toilet_men[toilet_men["ููุงูุต_ููุงุฏ"] != "ูุง ููุฌุฏ"].empty:
            st.warning("ููุฌุฏ ููุงูุต ูู ููุงุฏ ูุธุงูุฉ ุฏูุฑุงุช ุงูููุงู (ุฑุฌุงู).")

    with col3:
        st.subheader("ููุงูุต ููุงุฏ ุงููุธุงูุฉ")
        missing_items = toilet_data[toilet_data["ููุงูุต_ููุงุฏ"] != "ูุง ููุฌุฏ"]
        if not missing_items.empty:
            st.error(f"ููุฌุฏ ููุงูุต ูู {len(missing_items)} ุฏูุฑุฉ ููุงู.")
            for index, row in missing_items.iterrows():
                st.write(f"- ููุงู ุฑูู {row['ุฑูู_ุงูููุงู']} ({row['ุงูููุน']}): {row['ููุงูุต_ููุงุฏ']}")
        else:
            st.success("ูุง ุชูุฌุฏ ููุงูุต ูู ููุงุฏ ุงููุธุงูุฉ ุญุงููุงู.")

    st.markdown("---") # ุฎุท ูุงุตู

    # --- ูุณู ุงูููุงู ุงูุฅุฏุงุฑูุฉ ุงููุนููุฉ ---
    st.header("ุงูููุงู ุงูุฅุฏุงุฑูุฉ ุงููุนููุฉ")

    admin_tasks = load_admin_tasks()

    if not admin_tasks.empty:
        # ุนุฑุถ ุงูููุงู ูู ุฌุฏูู ุฃู ูู ุจุทุงูุงุช ูุฑุฏูุฉ ุญุณุจ ุงูุฑุบุจุฉ
        # ูุนุฑุถูุง ูุจุทุงูุงุช ูููุตูุฉ ููู ูููุฉ
        for index, task in admin_tasks.iterrows():
            st.markdown(f"**ุงููููุฉ:** {task['ุงููููุฉ']}")
            st.markdown(f"**ุงูุญุงูุฉ:** <span style='color: {'red' if task['ุงูุญุงูุฉ'] == 'ูุนููุฉ' else 'orange'}; font-weight:bold;'>{task['ุงูุญุงูุฉ']}</span>", unsafe_allow_html=True)
            if pd.notna(task['ุงูููุนุฏ_ุงูููุงุฆู']): # ุชุญูู ููุง ุฅุฐุง ูุงู ุงูููุนุฏ ุงูููุงุฆู ููุฌูุฏุงู
                st.markdown(f"**ุงูููุนุฏ ุงูููุงุฆู:** {task['ุงูููุนุฏ_ุงูููุงุฆู']}")
            st.markdown("---") # ุฎุท ูุงุตู ุจูู ุงูููุงู
    else:
        st.info("ูุง ุชูุฌุฏ ููุงู ุฅุฏุงุฑูุฉ ูุนููุฉ ุญุงููุงู.")


# ุงุณุชุฏุนุงุก ุงูุฏุงูุฉ ูุชุดุบูู ุงูุตูุญุฉ
run()
