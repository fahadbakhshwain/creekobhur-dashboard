import streamlit as st
import pandas as pd
import datetime
import os

# ุงุณู ุงูููู ูุญูุธ ุจูุงูุงุช ุฏูุฑุงุช ุงูููุงู
TOILETS_DATA_FILE = "toilets_data.csv"
# ูุฌูุฏ ูุญูุธ ุตูุฑ ุฏูุฑุงุช ุงูููุงู
TOILETS_IMAGES_DIR = "toilet_images"

# ุงูุชุฃูุฏ ูู ูุฌูุฏ ูุฌูุฏ ุญูุธ ุงูุตูุฑ
if not os.path.exists(TOILETS_IMAGES_DIR):
    os.makedirs(TOILETS_IMAGES_DIR)

# ุฏุงูุฉ ูุชุญููู ุจูุงูุงุช ุฏูุฑุงุช ุงูููุงู
def load_toilets_data():
    if os.path.exists(TOILETS_DATA_FILE):
        try:
            return pd.read_csv(TOILETS_DATA_FILE)
        except pd.errors.EmptyDataError:
            return pd.DataFrame(columns=["ุงูุชุงุฑูุฎ", "ุงูููุช", "ุงููุณุคูู", "ุฑูู_ุงูููุงู", "ุงูููุน", "ูุฑุงุช_ุงูุชูุธูู", "ููุงูุต_ููุงุฏ", "ููุงุญุธุงุช", "ูุณุงุฑ_ุงูุตูุฑุฉ"])
    return pd.DataFrame(columns=["ุงูุชุงุฑูุฎ", "ุงูููุช", "ุงููุณุคูู", "ุฑูู_ุงูููุงู", "ุงูููุน", "ูุฑุงุช_ุงูุชูุธูู", "ููุงูุต_ููุงุฏ", "ููุงุญุธุงุช", "ูุณุงุฑ_ุงูุตูุฑุฉ"])

# ุฏุงูุฉ ูุญูุธ ุจูุงูุงุช ุฏูุฑุงุช ุงูููุงู
def save_toilets_data(df):
    df.to_csv(TOILETS_DATA_FILE, index=False)

def run():
    st.title("๐ฝ ุฅุฏุงุฑุฉ ููุชุงุจุนุฉ ุฏูุฑุงุช ุงูููุงู")
    st.info("ููุง ููููู ุชุณุฌูู ูุชุชุจุน ุญุงูุฉ ูุธุงูุฉ ุฏูุฑุงุช ุงูููุงู ูุงูููุงูุต ูุฑูุน ุงูุตูุฑ.")

    st.header("ุชุณุฌูู ุญุงูุฉ ุฏูุฑุฉ ููุงู")
    with st.form("toilet_status_form", clear_on_submit=True):
        entry_date = st.date_input("ุชุงุฑูุฎ ุงูุชุณุฌูู:", datetime.date.today())
        entry_time = st.time_input("ููุช ุงูุชุณุฌูู:", datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=3))).time()) # ุชูููุช ุงูุณุนูุฏูุฉ ูู UTC+3

        # ูุงุฆูุฉ ุจุงููุดุฑููู ุงููุชุงุญูู (ูููู ุฃู ุชุฃุชู ูู ููุงู ูุฑูุฒู ูุณุชูุจูุงู)
        supervisors = ["ุงููุดุฑู ุงูุฃูู", "ุงููุดุฑู ุงูุซุงูู", "ุงููุดุฑู ุงูุซุงูุซ", "ุงูุนูุงูุฉ ุงูุนุงูุฉ"]
        responsible_person = st.selectbox("ุงููุณุคูู ุนู ุงูุชูุธูู:", supervisors, key="responsible_person_select")

        toilet_number = st.selectbox(
            "ุฑูู ุฏูุฑุฉ ุงูููุงู:",
            ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"],
            key="toilet_num_select"
        )
        toilet_type = st.radio("ููุน ุฏูุฑุฉ ุงูููุงู:", ("ุฑุฌุงู", "ูุณุงุก", "ุฎุงุต"), key="toilet_type_radio")
        
        # ูุง ูุทูุจ "ุนุฏุฏ ูุฑุงุช ุงูุชูุธูู" ููุง ูุจุงุดุฑุฉุ ุจู ูุณุฌู "ุนูููุฉ ุชูุธูู" ูุงุญุฏุฉ
        # ูููููุง ุญุณุงุจ ุงูุฅุฌูุงูู ูุงุญูุงู ูู ุงูุจูุงูุงุช ุงููุณุฌูุฉ.
        
        # ุงุฎุชูุงุฑ ุงูููุงูุต
        missing_items_options = ["ูุง ููุฌุฏ", "ุฏูุชูู", "ุตุงุจูู", "ููุงุฏูู", "ุฃููุงุณ ููุงูุงุช", "ูุนุทุฑ ุฌู", "ุฃุฎุฑู"]
        missing_items = st.multiselect("ููุงูุต ููุงุฏ ุงููุธุงูุฉ:", missing_items_options, default=["ูุง ููุฌุฏ"] if "ูุง ููุฌุฏ" in missing_items_options else [])
        
        notes = st.text_area("ููุงุญุธุงุช ุฅุถุงููุฉ:", key="toilet_notes_text")

        # ุฑูุน ุงูุตูุฑ
        uploaded_image = st.file_uploader("ุงุฑูุน ุตูุฑุฉ ูุฏูุฑุฉ ุงูููุงู ุจุนุฏ ุงูุชูุธูู (ุงุฎุชูุงุฑู):", type=["png", "jpg", "jpeg"], key="toilet_image_uploader")
        
        submitted = st.form_submit_button("ุชุณุฌูู ุงูุญุงูุฉ")
        if submitted:
            image_path = ""
            if uploaded_image is not None:
                # ุฅูุดุงุก ุงุณู ูุฑูุฏ ููุตูุฑุฉ ูุญูุธูุง
                timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
                image_name = f"{toilet_number}_{toilet_type}_{timestamp}_{uploaded_image.name}"
                image_path = os.path.join(TOILETS_IMAGES_DIR, image_name)
                
                # ุญูุธ ุงูุตูุฑุฉ
                with open(image_path, "wb") as f:
                    f.write(uploaded_image.getbuffer())
                st.success(f"ุชู ุญูุธ ุงูุตูุฑุฉ: {image_name}")

            missing_items_str = ", ".join(missing_items) if missing_items and "ูุง ููุฌุฏ" not in missing_items else "ูุง ููุฌุฏ"
            
            # ูู ูู ูุฑุฉ ูุชู ุงูุชุณุฌููุ ูุนุชุจุฑูุง "ูุฑุฉ ุชูุธูู" ูุงุญุฏุฉ
            new_entry = pd.DataFrame([{
                "ุงูุชุงุฑูุฎ": entry_date.isoformat(),
                "ุงูููุช": entry_time.strftime("%H:%M"),
                "ุงููุณุคูู": responsible_person,
                "ุฑูู_ุงูููุงู": toilet_number,
                "ุงูููุน": toilet_type,
                "ูุฑุงุช_ุงูุชูุธูู": 1, # ูุณุฌู 1 ููู ุนูููุฉ ุชุณุฌูู
                "ููุงูุต_ููุงุฏ": missing_items_str,
                "ููุงุญุธุงุช": notes,
                "ูุณุงุฑ_ุงูุตูุฑุฉ": image_path
            }])
            
            all_data = load_toilets_data()
            if all_data.empty:
                updated_data = new_entry
            else:
                updated_data = pd.concat([all_data, new_entry], ignore_index=True)
            save_toilets_data(updated_data)
            st.success("โ ุชู ุชุณุฌูู ุญุงูุฉ ุฏูุฑุฉ ุงูููุงู ุจูุฌุงุญ!")
            st.rerun()

    st.header("๐ ุณุฌูุงุช ุฏูุฑุงุช ุงูููุงู ุงูููู")
    current_day_data = load_toilets_data()
    today_date_str = datetime.date.today().isoformat()
    daily_records = current_day_data[current_day_data["ุงูุชุงุฑูุฎ"] == today_date_str]

    if not daily_records.empty:
        # ุนุฑุถ ุงูุณุฌูุงุช ูู ุฌุฏูู
        st.dataframe(daily_records[['ุงูุชุงุฑูุฎ', 'ุงูููุช', 'ุงููุณุคูู', 'ุฑูู_ุงูููุงู', 'ุงูููุน', 'ููุงูุต_ููุงุฏ', 'ููุงุญุธุงุช']].style.set_properties(**{'text-align': 'right', 'font-size': '14px'}), hide_index=True)
        
        # ุนุฑุถ ุงูุตูุฑ (ุจุดูู ุงุฎุชูุงุฑู ูู expender)
        if st.checkbox("ุนุฑุถ ุงูุตูุฑ ุงููุฑููุนุฉ ููุฐุง ุงูููู"):
            for index, row in daily_records.iterrows():
                if row['ูุณุงุฑ_ุงูุตูุฑุฉ'] and os.path.exists(row['ูุณุงุฑ_ุงูุตูุฑุฉ']):
                    st.image(row['ูุณุงุฑ_ุงูุตูุฑุฉ'], caption=f"ุตูุฑุฉ ุฏูุฑุฉ ููุงู ุฑูู {row['ุฑูู_ุงูููุงู']} ({row['ุงูููุน']}) - {row['ุงูููุช']}", width=200)
                else:
                    st.markdown(f"**ุฏูุฑุฉ ููุงู ุฑูู {row['ุฑูู_ุงูููุงู']} ({row['ุงูููุน']}):** ูุง ุชูุฌุฏ ุตูุฑุฉ ูุฑููุนุฉ ุฃู ุงููุณุงุฑ ุบูุฑ ุตุงูุญ.")
        
        # ููุฎุต ุณุฑูุน ููููุงูุต
        st.subheader("๐ก ุฃุจุฑุฒ ุงูููุงูุต ุงููุจูุบ ุนููุง ุงูููู:")
        missing_today = daily_records[daily_records["ููุงูุต_ููุงุฏ"].str.contains("ูุง ููุฌุฏ") == False]
        if not missing_today.empty:
            for index, row in missing_today.iterrows():
                st.warning(f"**ุฑูู {row['ุฑูู_ุงูููุงู']} ({row['ุงูููุน']}) - {row['ุงููุณุคูู']}:** ููุงูุต ูู: {row['ููุงูุต_ููุงุฏ']}")
        else:
            st.success("๐ ูุง ุชูุฌุฏ ููุงูุต ูู ููุงุฏ ุงููุธุงูุฉ ูุจูุบ ุนููุง ุงูููู.")
            
    else:
        st.info("ูุง ุชูุฌุฏ ุจูุงูุงุช ุชุณุฌูู ูุฏูุฑุงุช ุงูููุงู ููุฐุง ุงูููู ุญุชู ุงูุขู.")


# ุงุณุชุฏุนุงุก ุงูุฏุงูุฉ ูุชุดุบูู ุงูุตูุญุฉ
run()
